name: CI

on:
  push:
    branches:
      - main
      - dev

jobs:
  analysis:
    name: Analyse SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Clonage complet pour une meilleure analyse
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Nécessaire pour l'intégration GitHub PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./backend
        run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar "-Dsonar.projectKey=GrandChevreuil_GroupWork"

  react_build:
    name: Build Frontend React
    runs-on: ubuntu-latest
    needs: java_build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
      - name: Build
        working-directory: ./frontend
        run: npm run build
        env:
          CI: false

  java_build:
    name: Build Backend Java
    runs-on: ubuntu-latest
    needs: analysis
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        working-directory: ./backend
        run: mvn -B package

#   deploy:
#     name: Déploiement
#     runs-on: ubuntu-latest
#     needs: [react_build, java_build]
#     steps:
#       - name: À configurer selon votre stratégie de déploiement
#         run: echo "Déploiement à implémenter"
